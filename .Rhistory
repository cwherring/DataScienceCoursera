getwd()
dir
dir()
getwd()
q()
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
libaray(datasets)
libray(datasets)
library(datasets)
data(iris)
str(iris)
apply(iris[,1:4], 2, mean)
s = subset(iris, iris$Species == "virginica", select=c("Sepal.Length", "Species"))
s
mean(s$Sepal.Length)
set.seed(1)
rpois(5,2)
?qpois
?system.time
?user.time
getwd
getwd()
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
outcome[,11] <- as.numeric(outcome[,11])
hist(outcome[,11])
?stop
str(outcome)
head(outcome)
validOutcome <- function(outcome) {
outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% outcomes) true
else false
}
validoutcome("mono")
validOutcome("mono")
validOutcome <- function(outcome) {
outcomes <- c("heart attack", "heart failure", "pneumonia")
if (outcome %in% outcomes) TRUE
else FALSE
}
validOutcome("mono")
validOutcome("heart attack")
library(states)
?library
?datasets
library(datasets)
library(help =datasets)
library(state)
dataset(state)
states
load(state)
state
?state
state.abb
validState <- function(state) {
library(datasets)
if (state in state.abb) TRUE
else FALSE
}
validState <- function(state) {
library(datasets)
if (state %in% state.abb) TRUE
else FALSE
}
validState("mn")
validState("MN")
validState("OK")
validState("KO")
validState("PR")
outcomeHA <-  subset(outcome, outcome$State == state)
outcomeHA <-  subset(outcome, outcome$State == "OK")
outcomeHA[,13] <- as.numeric(outcomeHA[,13])
hist(outcomeHA[,13])
outcomeHA <-  subset(outcome, outcome$State == "OK", select=c(2,13))
head(outcomeHA)
outcomeHA <-  subset(outcome, outcome$State == "OK", select=c(2,11))
head(outcomeHA)
outcomeHA[,11] <- as.numeric(outcomeHA[,11])
outcomeHA <-  subset(outcome, outcome$State == "OK", select=c(2,11))
outcomeHA[,2] <- as.numeric(outcomeHA[,2])
head(outcomeHA)
summary(outcomeHA)
?min
min(outcomeHA)
min(outcomeHA[,2])
min(outcomeHA[,2], na.rm=TRUE)
outcomeHA[,2==12.5]
outcomeHA[2==12.5,]
outcomeHA[Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack==12.5]
outcomeHA[outcomeHA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack==12.5]
outcomeHA[outcomeHA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack==12.5,]
outcomeHA[,outcomeHA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack==12.5]
outcomeHA[1,outcomeHA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack==12.5]
outcomeHA[outcomeHA$Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack==12.5,1]
outcome <- getOutcomeDate("outcome-of-care-measures.csv")
source("best.R")
outcome <- getOutcomeDate("outcome-of-care-measures.csv")
outcome <- getOutcomeData("outcome-of-care-measures.csv")
outcomeHA <- subset(outcome, outcome$State == "TX")
subset(outcomeHA, outcomeHA[,17]==min(outcomeHA[,17], na.rm=TRUE))
subset(outcomeHA, outcomeHA[,17]==min(outcomeHA[,17], na.rm=TRUE), select=2)
source("best.R")
bestHA("TX")
bestHA("MD")
source("best.R")
bestHA("MD")
source("best.R")
bestHF("MD")
bestPN("MD")
str(outcomeHA)
as.matrix(bestPN("MD"))
bestHF("MD")
as.matrix(bestPN("MD"))
t <- as.matrix(bestPN("MD"))
t
as.list(bestPN("MD"))
source("best.R")
bestHF("MD")
as.list(subset(bestoutcome, bestoutcome[,17]==min(bestoutcome[,17], na.rm=TRUE), select=2), all.names=FALSE)
source("best.R")
bestHF("MD")
t <- bestHF("MD")
t
names(t) <- NULL
t
names(t)
t <- bestHF("MD")
names(t)
t[1]
names(t)
t <- bestHF("MD")
as.vector(t)
as.dataframe(t)
clear
as.matrix(t)
as.matrix(t)[,2]
as.matrix(t)[2
}
as.matrix(t)[2]
as.matrix(t)[1]
t
clear
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
best("SC", "heart attack")
source("best.R")
validState("SC")
state <- "SC"
validState(state)
if (!validState(state)) state
source("best.R")
best("SC", "heart attack")
submit()
t =best("SC", "heart attack")
t
str(t)
as.vector(t)
t = as.vector(t)
t
str(t)
t[1]
str(t[1])
str(outcome)
as.charater(t)
as.character(t)
source("best.R")
best("SC", "heart attack")
submit()
submit()
submit()
best("NN", "pneumonia")
best("NY", "pneumonia")
best("SC", "heart attack")
source("best.R")
best("NY", "pneumonia")
best("SC", "heart attack")
rankoutcome <- subset(outcome, outcome$State == state)[order(outcome[,11], outcome[,2])]
rankoutcome <- subset(outcome, outcome$State == state)
rankoutcome.s <- rankoutcome[order(outcome[,11], outcome[,2]),]
rankoutcome <- subset(outcome, outcome$State == state)[order(outcome[,11], outcome[,2]),]
rankoutcome
head(rankoutcome)
str(rankoutcome)
rankoutcome <- subset(outcome, outcome$State == state)
str(rankoutcome)
rankoutcome.s <- rankoutcome[order(outcome[,11], outcome[,2]),]
str(rankoutcome.s)
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,11))
rank.s <- rankoutcome[order(outcome[,2], outcome[,1])]
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,11))
rankoutcome
str(rankoutcome)
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1])]
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
head(rank.s)
rank.s
rank.s[9,]
rank.s[10,]
rank.s[11,]
names(rank.s) <- c("Hospital.Name", "Rate")
rank.s[11,]
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,11), na.rm=TRUE)
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s
rank.s <- complete.cases(rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),])
rank.s
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s[complete.case(rank.s),]
rank.s[complete.cases(rank.s),]
rankHA <- function(state, rank) {
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,11), na.rm=TRUE)
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s <- rank.s[complete.cases(rank.s),]
names(rank.s) <- c("Hospital.Name", "Rate")
rank.s[rank,]
}
rankHA("OK", 5)
rankHA("TX", 4)
rankHA("MD", 4)
rankHA("MN", 5000)
source("prog3-common.R")
rankHF("TX", 4)
source("prog3-common.R")
rankHF("TX", 4)
rankHA("MD", 4)
as.character(rank.s[max(rank.s[,2])])
as.character(rank.s[1,max(rank.s[,2])])
as.character(rank.s[max(rank.s[,2]),1]
)
rank.s
rank.s[complete.cases(rank.s),]
as.character(rank.s[max(rank.s[,2]),1])
rank.s
rank.s <- rank.s[complete.cases(rank.s),]
as.character(rank.s[max(rank.s[,2]),1])
source("prog3-common.R")
rankHA("MD", "worst")
tail(rank.s)
max(rank.s[,2])
tail(rank.s, n=1)
rankHA("MD", "best")
rankHA("MD", 4)
head(rank.s)
tail(rank.s)
rank.s
source("prog3-common.R")
rankHA("MD", "worst")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("TX", "heart attack", "worst")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000
)
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
lapply(state.abb, function(x){rankHA(x, "best")})
sapply(state.abb, function(x){rankHA(x, "best")})
r = sapply(state.abb, function(x){rankHA(x, "best")})
r
r
as.dataframe(lapply(state.abb, function(x){rankHA(x, "best")}))
as.data.frame(lapply(state.abb, function(x){rankHA(x, "best")}))
lapply(state.abb, function(x){rankHA(x, "best")})
rankHA <- function(state, rank) {
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,7,11))
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s <- rank.s[complete.cases(rank.s),]
names(rank.s) <- c("Hospital.Name", "Rate")
if(rank=="worst"){
as.character(tail(rank.s, n=1)[,])
} else if (rank=="best") {
as.character(rank.s[1,])
} else {
as.character(rank.s[rank,])
}
}
rankHA("OK", "best")
rankHA <- function(state, rank) {
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,7,11))
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s <- rank.s[complete.cases(rank.s),]
names(rank.s) <- c("Hospital.Name", "Rate")
if(rank=="worst"){
as.character(tail(rank.s, n=1)[,])
} else if (rank=="best") {
as.character(rank.s[1,])
} else {
as.data.frame(rank.s[rank,1:2])
}
}
rankHA("OK", "best")
rankHA("OK", 1)
rankHA <- function(state, rank) {
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,7,11))
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s <- rank.s[complete.cases(rank.s),]
names(rank.s) <- c("Hospital.Name", "state", "rate")
if(rank=="worst"){
as.data.frame(tail(rank.s, n=1)[,])
} else if (rank=="best") {
as.data.frame(rank.s[1,])
} else {
as.data.frame(rank.s[rank,)
}
}
rankHA <- function(state, rank) {
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,7,11))
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s <- rank.s[complete.cases(rank.s),]
names(rank.s) <- c("Hospital.Name", "state", "rate")
if(rank=="worst"){
as.data.frame(tail(rank.s, n=1)[,])
} else if (rank=="best") {
as.data.frame(rank.s[1,])
} else {
as.data.frame(rank.s[rank,)
}
}
rankHA <- function(state, rank) {
rankoutcome <- subset(outcome, outcome$State == state, select=c(2,7,11))
rank.s <- rankoutcome[order(rankoutcome[,2], rankoutcome[,1]),]
rank.s <- rank.s[complete.cases(rank.s),]
names(rank.s) <- c("Hospital.Name", "state", "rate")
if(rank=="worst"){
as.data.frame(tail(rank.s, n=1)[,])
} else if (rank=="best") {
as.data.frame(rank.s[1,])
} else {
as.data.frame(rank.s[rank,])
}
}
rankHA("OK", 1)
source("prog3-common.R")
lapply(state.abb, function(x){rankHA(x, "best")})
sapply(state.abb, function(x){rankHA(x, "best")})
apply(state.abb, function(x){rankHA(x, "best")})
tapply(state.abb, function(x){rankHA(x, "best")})
as.data.frame(lapply(state.abb, function(x){rankHA(x, "best")}))
t +as.data.frame(lapply(state.abb, function(x){rankHA(x, "best")}))
t =as.data.frame(lapply(state.abb, function(x){rankHA(x, "best")}))
str(t)
data.frame(lapply(state.abb, function(x){rankHA(x, "best")}))
str(t)
t = data.frame(lapply(state.abb, function(x){rankHA(x, "best")}))
str(t)
N = 50
df = data.frame(num=rep(NA,N), txt=rep("",N), stringsAsFactors=FALSE)
df
for(state in states.abb){}
for(state in state.abb){
i = i + 1
df[i,] <- rankHA(state, "best")
}
i = 0
for(state in state.abb){
i = i + 1
df[i,] <- rankHA(state, "best")
}
df
df = data.frame(hospital=rep(NA,N), state=rep("",N), stringsAsFactors=FALSE)
for(state in state.abb){
df[i,] <- rankHA(state, "best")
for(state in state.abb){
i = i + 1
df[i,1] <- rankHA(state, "best")[1]
df[i,2] <- rankHA(state, "best")[2]
}
df
df = data.frame(hospital=rep("",N), state=rep("",N), stringsAsFactors=FALSE)
for(state in state.abb){
i = i + 1
df[i,1] <- rankHA(state, "best")[1]
df[i,2] <- rankHA(state, "best")[2]
}
df
str(df)
head(df)
tail(df)
df = null
df = NULL
df = data.frame(hospital=rep("",N), state=rep("",N), stringsAsFactors=FALSE)
str(df)
for(state in state.abb){
i=0
for(state in state.abb){
i = i + 1
df[i,1] <- rankHA(state, "best")[1]
df[i,2] <- rankHA(state, "best")[2]
}
df
head(df, 10)
source("rankall.R")
rankall("heart attack", 20)
df
rankall("heart attack", 20)
source("rankall.R")
rankall("heart attack", 20)
source("rankall.R")
rankall("heart attack", 20)
source("rankall.R")
rankall("heart attack", 20)
df <- df[order(df[,2]),]
df
source("rankall.R")
rankall("heart attack", 20)
source("rankall.R")
rankall("heart attack", 20)
source("rankall.R")
rankall("heart attack", 20)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
rankPN("WI")
rankPN("WI", "worst")
rankPN("WI", "best")
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
state.abb
states <- append(state.abb, "DC")
states
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
rankHF("heart failure", "best")
rankHF("VI", "best")
rankHF("heart failure", "best")
rankHF("VI", "best")
source("rankall.R")
tail(rankall("heart failure"), 10)
states <- states[order(states[1])]
states
states <- states[order(states[,1])]
states <- append(state.abb, "DC")
states
order(states)
str(states)
str(states[2])
order(states[2])
order(states[1])
order(states)
states[order(states)]
source("rankall.R")
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
df[,state=="VI"]
df[state=="VI",]
df
source("rankall.R")
source("rankall.R")
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
outcome
source("rankall.R")
tail(rankall("heart failure"), 10)
source("rankall.R")
tail(rankall("heart failure"), 10)
states
outcomes[,7]
outcome[,7]
unique(unlist(outcome[,7], use.names = FALSE))
len(unique(unlist(outcome[,7], use.names = FALSE)))
length(unique(unlist(outcome[,7], use.names = FALSE)))
source("rankall.R")
tail(rankall("heart failure"), 10)
submit
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
